#!/bin/bash

# Cloud Provider Firewall Setup Script
# This script provides commands for different cloud providers

echo "‚òÅÔ∏è CLOUD PROVIDER FIREWALL SETUP"
echo "================================"
echo "Choose your cloud provider:"
echo "1. AWS EC2"
echo "2. DigitalOcean"
echo "3. Google Cloud Platform"
echo "4. Vultr"
echo "5. Show all commands"
echo ""

read -p "Enter your choice (1-5): " choice

case $choice in
    1)
        echo "üîß AWS EC2 Firewall Setup"
        echo "========================="
        echo ""
        echo "1. Go to AWS Console ‚Üí EC2 ‚Üí Security Groups"
        echo "2. Select your instance's security group"
        echo "3. Click 'Edit inbound rules'"
        echo "4. Add rule:"
        echo "   - Type: Custom TCP"
        echo "   - Port: 4000"
        echo "   - Source: 0.0.0.0/0"
        echo "   - Description: API Server"
        echo "5. Save rules"
        echo ""
        echo "AWS CLI Commands (if you have AWS CLI installed):"
        echo "aws ec2 authorize-security-group-ingress --group-id sg-your-group-id --protocol tcp --port 4000 --cidr 0.0.0.0/0"
        ;;
    2)
        echo "üîß DigitalOcean Firewall Setup"
        echo "=============================="
        echo ""
        echo "1. Go to DigitalOcean Dashboard ‚Üí Networking ‚Üí Firewalls"
        echo "2. Click 'Create Firewall' or edit existing"
        echo "3. Add rule:"
        echo "   - Type: Custom"
        echo "   - Protocol: TCP"
        echo "   - Port Range: 4000"
        echo "   - Sources: All IPv4"
        echo "4. Apply to your droplet"
        echo "5. Save firewall"
        echo ""
        echo "DigitalOcean CLI Commands (if you have doctl installed):"
        echo "doctl compute firewall create --name api-firewall --inbound-rules protocol:tcp,ports:4000,sources:0.0.0.0/0"
        ;;
    3)
        echo "üîß Google Cloud Platform Firewall Setup"
        echo "======================================"
        echo ""
        echo "1. Go to Google Cloud Console ‚Üí VPC Network ‚Üí Firewall"
        echo "2. Click 'Create Firewall Rule'"
        echo "3. Configure:"
        echo "   - Name: allow-port-4000"
        echo "   - Direction: Ingress"
        echo "   - Action: Allow"
        echo "   - Targets: All instances in the network"
        echo "   - Source IP ranges: 0.0.0.0/0"
        echo "   - Protocols and ports: TCP, Port 4000"
        echo "4. Create rule"
        echo ""
        echo "GCP CLI Commands:"
        echo "gcloud compute firewall-rules create allow-port-4000 --allow tcp:4000 --source-ranges 0.0.0.0/0 --description 'Allow API Server'"
        ;;
    4)
        echo "üîß Vultr Firewall Setup"
        echo "======================"
        echo ""
        echo "1. Go to Vultr Dashboard ‚Üí Firewall"
        echo "2. Click 'Add Firewall Group' or edit existing"
        echo "3. Add rule:"
        echo "   - Protocol: TCP"
        echo "   - Port: 4000"
        echo "   - Source: Anywhere"
        echo "   - Description: API Server"
        echo "4. Apply to your server"
        echo "5. Save firewall"
        echo ""
        echo "Vultr CLI Commands (if you have vultr-cli installed):"
        echo "vultr-cli firewall rule create --firewall-group-id your-group-id --protocol tcp --port 4000 --source 0.0.0.0/0"
        ;;
    5)
        echo "üîß ALL CLOUD PROVIDER COMMANDS"
        echo "=============================="
        echo ""
        echo "AWS EC2:"
        echo "aws ec2 authorize-security-group-ingress --group-id sg-your-group-id --protocol tcp --port 4000 --cidr 0.0.0.0/0"
        echo ""
        echo "DigitalOcean:"
        echo "doctl compute firewall create --name api-firewall --inbound-rules protocol:tcp,ports:4000,sources:0.0.0.0/0"
        echo ""
        echo "Google Cloud:"
        echo "gcloud compute firewall-rules create allow-port-4000 --allow tcp:4000 --source-ranges 0.0.0.0/0"
        echo ""
        echo "Vultr:"
        echo "vultr-cli firewall rule create --firewall-group-id your-group-id --protocol tcp --port 4000 --source 0.0.0.0/0"
        echo ""
        echo "Universal (if you have access to cloud console):"
        echo "1. Find your server's security group/firewall"
        echo "2. Add inbound rule: Port 4000, Protocol: TCP, Source: 0.0.0.0/0"
        echo "3. Apply to your server"
        ;;
    *)
        echo "‚ùå Invalid choice. Please run the script again."
        exit 1
        ;;
esac

echo ""
echo "üéØ AFTER SETTING UP CLOUD FIREWALL:"
echo "==================================="
echo "1. Wait 2-3 minutes for changes to take effect"
echo "2. Test from external browser: http://103.14.120.163:4000"
echo "3. Test from command line: curl http://103.14.120.163:4000"
echo "4. If still not working, check:"
echo "   - Server is running: pm2 status"
echo "   - Port is listening: netstat -tlnp | grep :4000"
echo "   - Server is binding to 0.0.0.0:4000"
echo ""
echo "üîç TROUBLESHOOTING:"
echo "==================="
echo "If external access still fails:"
echo "1. Check if server is binding to 0.0.0.0:4000 (not 127.0.0.1:4000)"
echo "2. Verify cloud provider firewall rule is active"
echo "3. Check if server has public IP address"
echo "4. Test with: telnet 103.14.120.163 4000"
echo ""
echo "üìû SUPPORT:"
echo "==========="
echo "Run these commands to check server status:"
echo "pm2 status"
echo "netstat -tlnp | grep :4000"
echo "sudo ufw status"
echo "curl http://localhost:4000"
